package ch.bbw.zork;import java.util.ArrayList;import java.util.HashMap;public class Room {		private String description;	private HashMap<String, Room> exits;	private ArrayList<Items> items;	private ArrayList<Items> requieredItem;	public Room(String description) {		this.description = description;		this.exits = new HashMap<String,Room>();		this.items = new ArrayList<Items>();		this.requieredItem = new ArrayList<Items>();	}	public void addRequieredItem(Items item, Items item2) {		this.requieredItem.add(item);	}	public ArrayList<Items> getRequieredItem() {		return this.requieredItem;	}	public void put(Room north, Room east, Room south, Room west) {		if (north != null) {			exits.put("north", north);		}		if (east != null) {			exits.put("east", east);		}		if (south != null) {			exits.put("south", south);		}		if (west != null) {			exits.put("west", west);		}	}	public void addItem(Items item) {		items.add(item);	}	public ArrayList<Items> getItems() {		return items;	}	public String shortDescription() {		return description;	}	public String longDescription() {		String tempStr = "Du befindest dich " + description + ".\n";		tempStr += "Items in this room:\n" + itemsString() + "\n";		tempStr += exitString();		return tempStr;	}	private String itemsString() {		if (items.isEmpty()) {			return "Es gibt keine Gegenstände in diesem Raum.";		}		StringBuilder returnString = new StringBuilder("Gegenstände:\n");		for (int i = 0; i < items.size(); i++) {			returnString.append(items.get(i).getName());			if (i < items.size() - 1) {				returnString.append("\n");			}		}		return returnString.toString();	}	private String exitString() {		String returnString = "Exits:";		for (String key : exits.keySet()) {			returnString += " " + key;		}		return returnString;	}	public Room nextRoom(String direction) {		return exits.get(direction);	}}